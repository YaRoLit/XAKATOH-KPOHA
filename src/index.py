import telebot as tgbot
from telebot import types
from telebot.apihelper import ApiTelegramException
import threading
import time
import settings
import json
import random
import string
from user import User
from processes import *
import handler


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
tgbot = tgbot.TeleBot(settings.TELEGRAM_TOKEN)
settings.tgbot = tgbot


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users = settings.users

tags = {"–ò–≥—Ä—ã": 0, "–î–µ–Ω—å–≥–∏": 0}


@tgbot.message_handler(commands=['start'])
def start(message):
    username = message.from_user.username
    if username not in users: #–ó–ê–ü–†–û–° –ö –ë–î
        users[username] = User(message.chat.id, username) #–ó–ê–ü–†–û–° –ö –ë–î (–ù–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)

        tgbot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!")
    tgbot.delete_message(message.chat.id, message.message_id)
    tag_select(message)


# _________________–ú–ï–ù–Æ_________________

def tag_select(call):
    #try:
    markup = types.InlineKeyboardMarkup(row_width=2)
    for tag in tags.keys():
        if tag in users[call.from_user.username].tags: #–ó–ê–ü–†–û–° –ö –ë–î
            markup.add(types.InlineKeyboardButton("‚úÖ " + tag, callback_data=f"tag_to_user_remove {tag}"))
        else:
            markup.add(types.InlineKeyboardButton(tag, callback_data=f"tag_to_user_add {tag}"))

    markup.add(types.InlineKeyboardButton("–ì–æ—Ç–æ–≤–æ", callback_data=f"to_main_menu"))
    #except Exception as e:
        #print(e)
    try:
        tgbot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
    except:
        main = tgbot.send_message(call.chat.id, f"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

def main_menu(call):
    #try:
    markup = types.InlineKeyboardMarkup(row_width=2)
    market = types.InlineKeyboardButton("üöÄ –°–æ–∑–¥–∞—Ç—å", callback_data="create_event")
    wallet = types.InlineKeyboardButton("üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å", callback_data="calendar")
    markup.add(market, wallet)
                                                                                                                                                # –ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                                                                                                                                                #web_app_info = types.WebAppInfo("https://localhost:5000")
                                                                                                                                                #button = types.KeyboardButton(text="–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=web_app_info)
                                                                                                                                                #markup.add(button)
    #except Exception as e:
        #print(e)
    try:
        tgbot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    except:
        main = tgbot.send_message(call.message.chat.id, f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)


# ______________________________________


if __name__ == "__main__":

    tgbot.polling(none_stop=True)
