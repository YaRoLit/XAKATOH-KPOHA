import settings
import importlib
from telebot import types
from telebot.apihelper import ApiTelegramException
from users import Users

events = settings.events
users = settings.users
cities = settings.cities
tags = settings.tags

def update_settings():
    global events
    global users
    global cities
    global tags
    settings.cities = cities
    settings.events = events
    settings.users = users
    settings.tags = tags
    importlib.reload(settings)

def tag_select(tgbot, call, uid):
    #try:
    markup = types.InlineKeyboardMarkup(row_width=2)
    for tag in tags:
        if tag in str(users.show_user_tags(str(uid))): #–ó–ê–ü–†–û–° –ö –ë–î
            markup.add(types.InlineKeyboardButton("‚úÖ " + tag, callback_data=f"tag_to_user_remove {tag}"))
        else:
            markup.add(types.InlineKeyboardButton(tag, callback_data=f"tag_to_user_add {tag}"))

    markup.add(types.InlineKeyboardButton("–ì–æ—Ç–æ–≤–æ", callback_data=f"to_main_menu"))
    #except Exception as e:
        #print(e)
    try:
        tgbot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
    except Exception as e:
        print(e)
        extra(tgbot, call, markup)
    
def extra(tgbot, call, markup):
    try:
        tgbot.send_message(call.message.chat.id, f"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
    except:
        tgbot.send_message(call.chat.id, f"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

def main_menu(tgbot, call):
    #try:
    markup = types.InlineKeyboardMarkup(row_width=2)
    plan = types.InlineKeyboardButton("üöÄ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="create_event")
    calendar = types.InlineKeyboardButton("üìÖ –°–æ–±—ã—Ç–∏—è", callback_data="calendar")
    tags = types.InlineKeyboardButton("üè∑ –ú–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã", callback_data="to_tag_menu")

    markup.add(calendar)
    markup.add(plan)
    markup.add(tags)

    #except Exception as e:
        #print(e)
    gif_path = 'assets/krona.mp4'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É
    with open(gif_path, 'rb') as gif:
        try:
            tgbot.send_video(chat_id=call.message.chat.id, video=gif, caption=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {call.from_user.first_name}. \n\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)
        except Exception as e:
            print(e)
            tgbot.send_video(chat_id=call.chat.id, video=gif, caption=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {call.from_user.first_name}. \n\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)


def ai_approval_menu(tgbot, message, action, time, date, place, length, event_type):
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="voice_undo"),
        types.InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="voice_approve"))

    if(action == 'add'): action_message = '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å'
    if(action == 'remove'): action_message = '–æ—Ç–º–µ–Ω–∏—Ç—å'
    
    tgbot.send_message(chat_id=message.chat.id, 
                       text=f'–í—ã —Ö–æ—Ç–∏—Ç–µ {action_message} —Å–æ–±—ã—Ç–∏–µ?\n–ú–µ—Å—Ç–æ: {place}\n–í—Ä–µ–º—è: {time[0:5]}\n–î–∞—Ç–∞: {date}\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {length} –º–∏–Ω—É—Ç\n–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {event_type}',
                       reply_markup=markup)
    
    
def voice_approve_button(tgbot, message):
    # TODO: –≤—ã–∑–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    tgbot.delete_message(message.chat.id, message.message_id)
    
def voice_undo_button(tgbot, message):
    tgbot.delete_message(message.chat.id, message.message_id)
    